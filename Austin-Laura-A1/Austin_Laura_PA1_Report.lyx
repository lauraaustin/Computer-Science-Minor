#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 0cm
\headsep 0cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
CSCE 221 Cover Page
\begin_inset Newline newline
\end_inset

 Programming Assignment #1 
\begin_inset Newline newline
\end_inset

Due July 11 by midnight to eCampus
\end_layout

\begin_layout Author
First Name Laura Last Name Austin UIN 524006473
\end_layout

\begin_layout Date
User Name laustin254 E-mail address laustin254@tamu.edu
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more: 
\color blue

\begin_inset CommandInset href
LatexCommand href
name "Aggie Honor System Office"
target "http://aggiehonor.tamu.edu/"

\end_inset

 
\color inherit

\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
http://www.cplusplus.com/reference/vector/vector/assign/
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
http://www.cplusplus.com/articles/y8hv0pDG/
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
http://www.cplusplus.com/forum/general/162451/
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
http://www.learncpp.com/cpp-tutorial/712-handling-errors-assert-cerr-exit-and-exce
ptions/
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
http://www.cplusplus.com/doc/oldtutorial/templates/
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Printed material
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset


\shape italic
Discrete Structures
\begin_inset Quotes erd
\end_inset

 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Quotes eld
\end_inset


\shape italic
Introduction to Program Design and Concepts
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Date
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
I certify that I have listed all the sources that I used to develop the
 solutions/codes to the submitted work.
\end_layout

\begin_layout Quotation
“On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work.” 
\end_layout

\begin_layout Date
\begin_inset VSpace bigskip
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Laura
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Austin
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

7/11/2017
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section*
Programming Assignment 1 (130 points)
\end_layout

\begin_layout Standard
In the first phase of the assignment, implement in C++ a class 
\family typewriter
My_vec
\family default
 that can hold data of character type (
\family typewriter
char
\family default
).
 The description of the functions for data manipulation is provided in the
 first  set of the lecture notes, see the 
\color blue

\begin_inset CommandInset href
LatexCommand href
name "slide 8"
target "http://courses.cs.tamu.edu/teresa/csce221/pdf-lectures/Intro2DS_Alg_revised.pdf"

\end_inset


\color inherit
.
 In the second phase, write a generic version of the class 
\family typewriter
My_vec
\family default
 that can handle any type of data.
 
\end_layout

\begin_layout Subsubsection*
1.
 Description of the Assignment Problem:
\end_layout

\begin_layout Standard
The assignment was to create and implement a vector that holds the type
 char.
 This vector imitates the classic vector class from stdlibfacilities.h.
 The objective was to get the vector to insert, remove, evaluate size, call
 specific indices in the vector, replace at specific indices, as well as
 finding the maximum element in the vector and sorting the vector.
 
\end_layout

\begin_layout Standard
The other parts of this assignment had to do with templating this vector
 class My_vec, which implies that any user can create a vector of any type,
 whereas the first portion of the assignment was specific to the type char.
 
\end_layout

\begin_layout Date
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
2.
 The Description of data structures and algorithms used to solve the problem.
\end_layout

\begin_layout Standard
(a) The data structures used were arrays, and for part 1, they specifically
 stored the type char.
 However, for part 2, the arrays specifically stored any user type when
 the class was called in the main.cpp file.
 The operations that support the data for part 1 and part 2 were insert,
 delete, replace (update), search (by calling a specific index of the array),
 replace, sort, and finding the maximum element index.
\end_layout

\begin_layout Standard
(b) Abstract Data Structure's implementation in C++ is recognized as a class,
 according to slide 6 out of 27 on lecture notes 
\begin_inset Quotes eld
\end_inset

Data Structures & Algorithms.
\begin_inset Quotes erd
\end_inset

 Furthermore, the implementations are containers, which include the sequences,
 under which vector is classified.
 
\end_layout

\begin_layout Standard
(c) The algorithms I used to solve the problem included referencing insertion,
 as well as sort.
 In insert, there had to obviously be error checking which would end the
 algorithm, but if there was not an error thrown, then the value of size
 was checked against the value of capacity.
 If size is greater than or equal to capacity, then there must be more memory
 allocated for the vector (because the vector is full).
 Memory is doubled.
 Then contents of the vector must be copied, and the new element added.
 Since the new element is added, there must be an entire shift of the vector,
 as well as an increase of size.
 For sorting, I used the function created that found the maximum index.
 The idea was to check the first 2 elements of the vector for the max index,
 and see whichever one had the maximum index, then the elements essentially
 swap according to the sort being from low to high or high to low, and iterate
 this process the same number of size times.
\end_layout

\begin_layout Standard
(d) The algorithm sort ran an iteration of size - 1 times in best case,
 whereas the algorithm insertion ran the number of size times at best case.
\end_layout

\begin_layout Standard
\noindent

\series bold
3.
 C++ organization and implementation:
\end_layout

\begin_layout Standard
(a) The class used was My_vec, and it implemented the data structures mentioned
 above.
\end_layout

\begin_layout Standard
(b) Class declarations were My_vec(); ~My_vec(); My_vec(const My_vec& vec);
 My_vec& operator=(const My_vec& vec); int get_size() const; int get_capacity()
 const; char& operator[](int i) const; char& operator[](int i); bool is_empty()
 const; char& elem_at_rank(int r) const; void insert_at_rank(int r, const
 char& elem); void replace_at_rank(int r, const char& elem); void remove_at_rank
(int r),
\end_layout

\begin_layout Standard
There implementation is in the .cpp file that is attached in the tar file
 on eCampus.
\end_layout

\begin_layout Standard
(c) The templated version is also in the tar file on eCampus.
 Essentially I just replaced every time 
\begin_inset Quotes eld
\end_inset

char
\begin_inset Quotes erd
\end_inset

 came up in the .cpp file of My_vec, then put the definitions of the functions
 in the header file, and classified them under template <typename T> My_vec.
 
\end_layout

\begin_layout Standard
\noindent

\series bold
4.
 How to navigate the program:
\end_layout

\begin_layout Standard
(a) compile the program.
\end_layout

\begin_layout Standard
the directory will be named Austin-Laura-PA1 which is my first and last
 name, programming assignment 1.
 Within that, there are two more tar files, one labeled Austin-Laura-PAp1.tar,
 containing the first part's files: My_vec.cpp, My_vec.h, main.cpp, and the
 other labeled Austin-Laura-PAp2.tar, containing the second part's files:
 TemplatedMy_vec.h, main.cpp.
 
\end_layout

\begin_layout Standard
(b) The executable file will be main.cpp, which you can run by typing ./main,
 I believe.
\end_layout

\begin_layout Standard
\noindent

\series bold
5.
 Specifications and description of input and output formats and files:
\end_layout

\begin_layout Standard
(a) In this specific program I do not believe there is a text input or text
 output file.
 All the output will be written to the command window, and not to a text
 file.
 
\end_layout

\begin_layout Standard
(b) Since the file must run based off of the .cpp file, all one must do to
 test the file is compile the main.cpp file, compile the My_vec.cpp, compile
 the My_vec.h and run the main file, and for part two the only two files
 that must be compiled are TemplatedMy_vec.h and main.cpp.
 
\end_layout

\begin_layout Standard
(c) The file that will probably abort due to failure in try-catch blocking
 methods will be the templated version of the assignment.
 It should compile, but when tested with the main file, it will probably
 abort.
 However, if all the try catches were written with 
\begin_inset Quotes eld
\end_inset

cerrs
\begin_inset Quotes erd
\end_inset

 (which would keep it from aborting), the .h file would not compile.
 Therefore I chose to implement the throw method of error checking in order
 to ensure the file compiles, despite the fact that the main file may abort
 midway.
\end_layout

\begin_layout Standard
\noindent

\series bold
6.
 Types of exceptions and their purpose:
\end_layout

\begin_layout Standard
(a) My program is full of many logical exceptions, because working within
 the data structure array there can be many mishaps regarding memory.
 Firstly, ranks that are called to that are less than 0 or larger than the
 size-1 cause an error.
 Also, if the user attempts to input an element into the 5 rank in a vector
 that is only of size 3 elements, then the user faces an error on their
 part.
 This happens because vectors are contigous data structures.
 
\end_layout

\begin_layout Standard
\noindent

\series bold
7.
 Pictures of the program:
\end_layout

\begin_layout Standard
Part 1: 
\begin_inset Graphics
	filename C:/Users/leagi/Documents/cs221/pasted1.png

\end_inset


\end_layout

\begin_layout Standard
Part 2:
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename C:/Users/leagi/Documents/pasted12.png

\end_inset


\end_layout

\begin_layout Standard
as mentioned earlier, this code compiles however it does abort due to try
 catch errors.
\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
— © Laura Austin 
\end_layout

\end_body
\end_document
